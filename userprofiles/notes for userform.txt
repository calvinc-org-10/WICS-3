@login_required
def fnWICSuserForm(req, formname, recNum):
    uQS = User.objects.all()
    WICSQS = WICS.objects.all()
    uQS.annotate(menuGroup=WICSQS.filter(user=self).menuGroup, org=WICSQS.filter(user=self).org)

    # create formset from uQS

    #========

    _userorg = WICSuser.objects.get(user=req.user).org
    # while processing POST vs GET is usually good, this form handles by manipulating recNum
    if req.method == 'POST':
        pass
    else: # request.method == 'GET' or something else
        pass
    # endif

    if recNum <= 0:
        currRec = MaterialList.objects.filter(org=_userorg).first()
    else:
        currRec = MaterialList.objects.filter(org=_userorg).get(pk=recNum)   # later, handle record not found
    # endif
    mtlFm = MaterialForm(instance=currRec, initial={'gotoItem': currRec.pk, 'showPK': currRec.pk})
    mtlFm.fields['gotoItem'].queryset=MaterialList.objects.filter(org=_userorg)
    mtlFm_with_Counts = inlineformset_factory(MaterialList,ActualCounts,fields='__all__',max_num=256,extra=0,can_delete=False)
    frmSet = mtlFm_with_Counts(instance=currRec)
    cntext = {'frmMain': mtlFm, 'formset': frmSet, 'formID':formname, 'orgname':currRec.org.orgname, 'uname':req.user.get_full_name()}
    return render(req, 'frm_Material.html', cntext)


examples of multiple button each doing different tasks
    <!--
    <button type="submit" formaction="/action_one">First action</button>
    <button type="submit" formaction="/action_two">Second action</button>
    -- OR --
    <form action="demo_form.php" method="get">

        Choose your favorite subject:

        <button name="subject" type="submit" value="html">HTML</button>
        <button name="subject" type="submit" value="css">CSS</button>
        <button name="subject" type="submit" value="javascript">JavaScript</button>
        <button name="subject" type="submit" value="jquery">jQuery</button>
    </form>
    -->

